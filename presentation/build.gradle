/*
 *   Copyright 2081 Sinyuk
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

apply plugin: "com.android.application"

apply plugin: "kotlin-android"

apply plugin: "kotlin-android-extensions"

apply plugin: 'kotlin-kapt'

//Load API Key information in from property file
Properties props = new Properties()
try {
    props.load(file('twitter.properties').newDataInputStream())
} catch (Exception ex) {
    throw new GradleException("Missing twitter.properties, check the twitter.properties file.")
}

android {
    compileSdkVersion 'android-P'
    buildToolsVersion '28.0.0 rc2'
    defaultConfig {
        applicationId "sinyuk.com.fanfou"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            // fanfou
            buildConfigField "String", "OAUTH_VERSION_VALUE", "\"1.0\""
            buildConfigField "String", "OAUTH_TYPE", "\"OAuth\""
            buildConfigField "String", "CONSUMER_KEY", "\"ceab0dcd7b9fb9fa2ef5785bcd320e70\""
            buildConfigField "String", "CONSUMER_SECRET", "\"bc9d15a8458d863cc6524feb6d495f4b\""
            // twitter
            buildConfigField "String", "TWITTER_CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
            buildConfigField "String", "TWITTER_CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            testCoverageEnabled = true
            // fanfou
            buildConfigField "String", "OAUTH_VERSION_VALUE", "\"1.0\""
            buildConfigField "String", "OAUTH_TYPE", "\"OAuth\""
            buildConfigField "String", "CONSUMER_KEY", "\"ceab0dcd7b9fb9fa2ef5785bcd320e70\""
            buildConfigField "String", "CONSUMER_SECRET", "\"bc9d15a8458d863cc6524feb6d495f4b\""
            // twitter
            buildConfigField "String", "TWITTER_CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
            buildConfigField "String", "TWITTER_CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
        }
    }
    sourceSets {}
    dexOptions {
        incremental true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':usecasee')
    implementation "com.twitter.sdk.android:twitter-core:$twitter_version"

    //
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //noinspection GradleCompatible
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "com.android.support.test:rules:$runner_version"
    androidTestImplementation "com.android.support.test:runner:$runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "com.google.dagger:dagger:$dagger_version"
    implementation 'com.jakewharton.timber:timber:4.7.0'

    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.paging:runtime:$paging_version"

    // dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    //
    implementation("com.github.hotchemi:permissionsdispatcher:$permission_version") {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
    }

    // UI
    implementation 'cn.dreamtobe.kpswitch:library:1.6.0'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.borjabravo:readmoretextview:2.1.0'
    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
    implementation 'com.linkedin.android.spyglass:spyglass:1.4.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta5'

    // https://yalantis.com
    implementation 'com.github.Yalantis:Context-Menu.Android:1.0.8'

    // network
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    //noinspection GradleDynamicVersion
    implementation 'jp.wasabeef:glide-transformations:3.3+'
    implementation "com.github.bumptech.glide:annotations:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    implementation("com.github.bumptech.glide:recyclerview-integration:$glide_version") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    kapt "com.github.hotchemi:permissionsdispatcher-processor:$permission_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
}
